name: Test Against Contrib

on:
  workflow_dispatch:
    inputs:
      clojureRepo:
        description: "Repository name with owner."
        required: true
        default: 'clojure/clojure'
      clojureRef:
        description: "The branch, tag or SHA to checkout"
        required: true
        default: 'master'

jobs:

  test-algo-generic:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/algo.generic'
      subjectRef: 'master'

  test-algo-monads:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/algo.monads'
      subjectRef: 'master'
  
  test-core-cache:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/core.cache'
      subjectRef: 'master'

  test-core-logic:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/core.logic'
      subjectRef: 'master'

  test-core-match:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/core.match'
      subjectRef: 'master'

  test-core-memoize:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/core.memoize'
      subjectRef: 'master'

## Uses Nashorn for testing, not available in newer JDKs
#  test-core-rrb-vector:
#    uses: ./.github/workflows/mvn-test.yml
#    with:
#      clojureRepo: ${{ inputs.clojureRepo }}
#      clojureRef: ${{ inputs.clojureRef }}
#      subjectRepo: 'clojure/core.rrb-vector'
#      subjectRef: 'master'

  test-data-avl:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.avl'
      subjectRef: 'master'

  test-data-csv:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.csv'
      subjectRef: 'master'

  test-data-fressian:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.fressian'
      subjectRef: 'master'

  test-data-generators:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.generators'
      subjectRef: 'master'

  test-data-int-map:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.int-map'
      subjectRef: 'master'

  test-data-json:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.json'
      subjectRef: 'master'

  test-data-priority-map:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.priority-map'
      subjectRef: 'master'

## Uses Nashorn for testing, not available in newer JDKs
#  test-data-xml:
#    uses: ./.github/workflows/mvn-test.yml
#    with:
#      clojureRepo: ${{ inputs.clojureRepo }}
#      clojureRef: ${{ inputs.clojureRef }}
#      subjectRepo: 'clojure/data.xml'
#      subjectRef: 'master'

  test-data-zip:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/data.zip'
      subjectRef: 'master'

  test-java-classpath:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/java.classpath'
      subjectRef: 'master'

  test-java-data:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/java.data'
      subjectRef: 'master'

  test-java-jmx:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/java.jmx'
      subjectRef: 'master'

  test-math-combinatorics:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/math.combinatorics'
      subjectRef: 'master'

  test-math-numeric-tower:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/math.numeric-tower'
      subjectRef: 'master'

  test-test-check:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/test.check'
      subjectRef: 'master'

  test-test-generative:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/test.generative'
      subjectRef: 'master'

  test-tools-analyzer:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.analyzer'
      subjectRef: 'master'

  test-tools-analyzer-jvm:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.analyzer.jvm'
      subjectRef: 'master'

  test-tools-build:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.build'
      subjectRef: 'master'

  test-tools-cli:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.cli'
      subjectRef: 'master'

  test-tools-deps:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.deps'
      subjectRef: 'master'

  test-tools-gitlibs:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.gitlibs'
      subjectRef: 'master'

  test-tools-logging:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.logging'
      subjectRef: 'master'

  test-tools-macro:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.macro'
      subjectRef: 'master'

  test-tools-reader:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.reader'
      subjectRef: 'master'

  test-tools-trace:
    uses: ./.github/workflows/mvn-test.yml
    with:
      clojureRepo: ${{ inputs.clojureRepo }}
      clojureRef: ${{ inputs.clojureRef }}
      subjectRepo: 'clojure/tools.trace'
      subjectRef: 'master'
